#include <stdio.h>
#include <stdint.h>
#include <pcap.h>
#include <arpa/inet.h>

/*struct eth_header{
    uint8_t dmac[6];
    uint8_t smac[6];
    uint8_t eth_type[2];
};

struct arp_header{
    uint8_t hw_type[2];
    uint8_t protocol[2];
    uint8_t hw_add_len;
    uint8_t proto_add_len;
    uint8_t opcode[2];
    uint8_t smac[4];
    uint8_t sip[4];
    uint8_t dmac[4];
    uint8_t dip[4];
};*/

int main(int argc, char * argv[]){
    char * dev = argv[1];
    char errbuf[PCAP_ERRBUF_SIZE];
    pcap_t* handle = pcap_open_live(dev, BUFSIZ, 1, 1000, errbuf);
   // uint32_t s_ip = inet_addr(argv[2]);
   // uint8_t a[] = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x50, 0x56, 0xff, 0x9c, 0xef, 0x08, 0x06};
   // uint8_t b[] = {0x00, 0x01, 0x08, 0x00, 0x06, 0x04, 0x00, 0x01, 0x00, 0x50, 0x56, 0xff, 0x9c, 0xef, 0xc0, 0xa8, 0xb8, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xa8, 0xb8, 0x99};
   // struct eth_header *req_eth = (struct eth_header *)a;
   // struct arp_header *req_arp = (struct arp_header *)b;
    uint8_t c[] = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x50, 0x56, 0xff, 0x9c, 0xef, 0x08, 0x06, 0x00, 0x01, 0x08, 0x00, 0x06, 0x04, 0x00, 0x01, 0x00, 0x50, 0x56, 0xff, 0x9c, 0xef, 0xc0, 0xa8, 0xb8, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xa8, 0xb8, 0x99};
    pcap_sendpacket(handle, c, 42);

    return 0;
}
